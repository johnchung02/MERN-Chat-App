{"ast":null,"code":"\"use strict\";\n\n// {{{1 Galois Field Math\nvar GF256_BASE = 285;\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\nfor (var i = 1; i < 256; i++) {\n  var n = EXP_TABLE[i - 1] << 1;\n  if (n > 255) n = n ^ GF256_BASE;\n  EXP_TABLE[i] = n;\n}\nfor (var i = 0; i < 255; i++) {\n  LOG_TABLE[EXP_TABLE[i]] = i;\n}\nfunction exp(k) {\n  while (k < 0) k += 255;\n  while (k > 255) k -= 255;\n  return EXP_TABLE[k];\n}\nfunction log(k) {\n  if (k < 1 || k > 255) {\n    throw Error('Bad log(' + k + ')');\n  }\n  return LOG_TABLE[k];\n}\n\n// {{{1 Generator Polynomials\nvar POLYNOMIALS = [[0],\n// a^0 x^0\n[0, 0],\n// a^0 x^1 + a^0 x^0\n[0, 25, 1] // a^0 x^2 + a^25 x^1 + a^1 x^0\n// and so on...\n];\nfunction generatorPolynomial(num) {\n  if (POLYNOMIALS[num]) {\n    return POLYNOMIALS[num];\n  }\n  var prev = generatorPolynomial(num - 1);\n  var res = [];\n  res[0] = prev[0];\n  for (var i = 1; i <= num; i++) {\n    res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n  }\n  POLYNOMIALS[num] = res;\n  return res;\n}\n\n// {{{1 export functions\nmodule.exports = function calculate_ec(msg, ec_len) {\n  // `msg` could be array or buffer\n  // convert `msg` to array\n  msg = [].slice.call(msg);\n\n  // Generator Polynomial\n  var poly = generatorPolynomial(ec_len);\n  for (var i = 0; i < ec_len; i++) msg.push(0);\n  while (msg.length > ec_len) {\n    if (!msg[0]) {\n      msg.shift();\n      continue;\n    }\n    var log_k = log(msg[0]);\n    for (var i = 0; i <= ec_len; i++) {\n      msg[i] = msg[i] ^ exp(poly[i] + log_k);\n    }\n    msg.shift();\n  }\n  return new Buffer(msg);\n};","map":{"version":3,"names":["GF256_BASE","EXP_TABLE","LOG_TABLE","i","n","exp","k","log","Error","POLYNOMIALS","generatorPolynomial","num","prev","res","module","exports","calculate_ec","msg","ec_len","slice","call","poly","push","length","shift","log_k","Buffer"],"sources":["F:/Coding Projects/Chat App/client/node_modules/qr-image/lib/errorcode.js"],"sourcesContent":["\"use strict\";\n\n// {{{1 Galois Field Math\nvar GF256_BASE = 285;\n\nvar EXP_TABLE = [1];\nvar LOG_TABLE = [];\n\nfor (var i = 1; i < 256; i++) {\n    var n = EXP_TABLE[i - 1] << 1;\n    if (n > 255) n = n ^ GF256_BASE;\n    EXP_TABLE[i] = n;\n}\n\nfor (var i = 0; i < 255; i++) {\n    LOG_TABLE[EXP_TABLE[i]] = i;\n}\n\nfunction exp(k) {\n    while (k < 0) k += 255;\n    while (k > 255) k -= 255;\n    return EXP_TABLE[k];\n}\n\nfunction log(k) {\n    if (k < 1 || k > 255) {\n        throw Error('Bad log(' + k + ')');\n    }\n    return LOG_TABLE[k];\n}\n\n// {{{1 Generator Polynomials\nvar POLYNOMIALS = [\n    [0], // a^0 x^0\n    [0, 0], // a^0 x^1 + a^0 x^0\n    [0, 25, 1], // a^0 x^2 + a^25 x^1 + a^1 x^0\n    // and so on...\n];\n\nfunction generatorPolynomial(num) {\n    if (POLYNOMIALS[num]) {\n        return POLYNOMIALS[num];\n    }\n    var prev = generatorPolynomial(num - 1);\n    var res = [];\n\n    res[0] = prev[0];\n    for (var i = 1; i <= num; i++) {\n        res[i] = log(exp(prev[i]) ^ exp(prev[i - 1] + num - 1));\n    }\n    POLYNOMIALS[num] = res;\n    return res;\n}\n\n// {{{1 export functions\nmodule.exports = function calculate_ec(msg, ec_len) {\n    // `msg` could be array or buffer\n    // convert `msg` to array\n    msg = [].slice.call(msg);\n\n    // Generator Polynomial\n    var poly = generatorPolynomial(ec_len);\n\n    for (var i = 0; i < ec_len; i++) msg.push(0);\n    while (msg.length > ec_len) {\n        if (!msg[0]) {\n            msg.shift();\n            continue;\n        }\n        var log_k = log(msg[0]);\n        for (var i = 0; i <= ec_len; i++) {\n            msg[i] = msg[i] ^ exp(poly[i] + log_k);\n        }\n        msg.shift();\n    }\n    return new Buffer(msg);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}