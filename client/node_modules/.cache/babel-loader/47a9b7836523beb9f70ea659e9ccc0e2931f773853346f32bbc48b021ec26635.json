{"ast":null,"code":"\"use strict\";\n\n// {{{1 Initialize matrix with zeros\nfunction init(version) {\n  var N = version * 4 + 17;\n  var matrix = [];\n  var zeros = new Buffer(N);\n  zeros.fill(0);\n  zeros = [].slice.call(zeros);\n  for (var i = 0; i < N; i++) {\n    matrix[i] = zeros.slice();\n  }\n  return matrix;\n}\n\n// {{{1 Put finders into matrix\nfunction fillFinders(matrix) {\n  var N = matrix.length;\n  for (var i = -3; i <= 3; i++) {\n    for (var j = -3; j <= 3; j++) {\n      var max = Math.max(i, j);\n      var min = Math.min(i, j);\n      var pixel = max == 2 && min >= -2 || min == -2 && max <= 2 ? 0x80 : 0x81;\n      matrix[3 + i][3 + j] = pixel;\n      matrix[3 + i][N - 4 + j] = pixel;\n      matrix[N - 4 + i][3 + j] = pixel;\n    }\n  }\n  for (var i = 0; i < 8; i++) {\n    matrix[7][i] = matrix[i][7] = matrix[7][N - i - 1] = matrix[i][N - 8] = matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\n  }\n}\n\n// {{{1 Put align and timinig\nfunction fillAlignAndTiming(matrix) {\n  var N = matrix.length;\n  if (N > 21) {\n    var len = N - 13;\n    var delta = Math.round(len / Math.ceil(len / 28));\n    if (delta % 2) delta++;\n    var res = [];\n    for (var p = len + 6; p > 10; p -= delta) {\n      res.unshift(p);\n    }\n    res.unshift(6);\n    for (var i = 0; i < res.length; i++) {\n      for (var j = 0; j < res.length; j++) {\n        var x = res[i],\n          y = res[j];\n        if (matrix[x][y]) continue;\n        for (var r = -2; r <= 2; r++) {\n          for (var c = -2; c <= 2; c++) {\n            var max = Math.max(r, c);\n            var min = Math.min(r, c);\n            var pixel = max == 1 && min >= -1 || min == -1 && max <= 1 ? 0x80 : 0x81;\n            matrix[x + r][y + c] = pixel;\n          }\n        }\n      }\n    }\n  }\n  for (var i = 8; i < N - 8; i++) {\n    matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\n  }\n}\n\n// {{{1 Fill reserved areas with zeroes\nfunction fillStub(matrix) {\n  var N = matrix.length;\n  for (var i = 0; i < 8; i++) {\n    if (i != 6) {\n      matrix[8][i] = matrix[i][8] = 0x80;\n    }\n    matrix[8][N - 1 - i] = 0x80;\n    matrix[N - 1 - i][8] = 0x80;\n  }\n  matrix[8][8] = 0x80;\n  matrix[N - 8][8] = 0x81;\n  if (N < 45) return;\n  for (var i = N - 11; i < N - 8; i++) {\n    for (var j = 0; j < 6; j++) {\n      matrix[i][j] = matrix[j][i] = 0x80;\n    }\n  }\n}\n\n// {{{1 Fill reserved areas\nvar fillReserved = function () {\n  var FORMATS = Array(32);\n  var VERSIONS = Array(40);\n  var gf15 = 0x0537;\n  var gf18 = 0x1f25;\n  var formats_mask = 0x5412;\n  for (var format = 0; format < 32; format++) {\n    var res = format << 10;\n    for (var i = 5; i > 0; i--) {\n      if (res >>> 9 + i) {\n        res = res ^ gf15 << i - 1;\n      }\n    }\n    FORMATS[format] = (res | format << 10) ^ formats_mask;\n  }\n  for (var version = 7; version <= 40; version++) {\n    var res = version << 12;\n    for (var i = 6; i > 0; i--) {\n      if (res >>> 11 + i) {\n        res = res ^ gf18 << i - 1;\n      }\n    }\n    VERSIONS[version] = res | version << 12;\n  }\n  var EC_LEVELS = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n  };\n  return function fillReserved(matrix, ec_level, mask) {\n    var N = matrix.length;\n    var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\n    function F(k) {\n      return format >> k & 1 ? 0x81 : 0x80;\n    }\n    ;\n    for (var i = 0; i < 8; i++) {\n      matrix[8][N - 1 - i] = F(i);\n      if (i < 6) matrix[i][8] = F(i);\n    }\n    for (var i = 8; i < 15; i++) {\n      matrix[N - 15 + i][8] = F(i);\n      if (i > 8) matrix[8][14 - i] = F(i);\n    }\n    matrix[7][8] = F(6);\n    matrix[8][8] = F(7);\n    matrix[8][7] = F(8);\n    var version = VERSIONS[(N - 17) / 4];\n    if (!version) return;\n    function V(k) {\n      return version >> k & 1 ? 0x81 : 0x80;\n    }\n    ;\n    for (var i = 0; i < 6; i++) {\n      for (var j = 0; j < 3; j++) {\n        matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\n      }\n    }\n  };\n}();\n\n// {{{1 Fill data\nvar fillData = function () {\n  var MASK_FUNCTIONS = [function (i, j) {\n    return (i + j) % 2 == 0;\n  }, function (i, j) {\n    return i % 2 == 0;\n  }, function (i, j) {\n    return j % 3 == 0;\n  }, function (i, j) {\n    return (i + j) % 3 == 0;\n  }, function (i, j) {\n    return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n  }, function (i, j) {\n    return i * j % 2 + i * j % 3 == 0;\n  }, function (i, j) {\n    return (i * j % 2 + i * j % 3) % 2 == 0;\n  }, function (i, j) {\n    return (i * j % 3 + (i + j) % 2) % 2 == 0;\n  }];\n  return function fillData(matrix, data, mask) {\n    var N = matrix.length;\n    var row,\n      col,\n      dir = -1;\n    row = col = N - 1;\n    var mask_fn = MASK_FUNCTIONS[mask];\n    var len = data.blocks[data.blocks.length - 1].length;\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.blocks.length; b++) {\n        if (data.blocks[b].length <= i) continue;\n        put(data.blocks[b][i]);\n      }\n    }\n    len = data.ec_len;\n    for (var i = 0; i < len; i++) {\n      for (var b = 0; b < data.ec.length; b++) {\n        put(data.ec[b][i]);\n      }\n    }\n    if (col > -1) {\n      do {\n        matrix[row][col] = mask_fn(row, col) ? 1 : 0;\n      } while (next());\n    }\n    function put(byte) {\n      for (var mask = 0x80; mask; mask = mask >> 1) {\n        var pixel = !!(mask & byte);\n        if (mask_fn(row, col)) pixel = !pixel;\n        matrix[row][col] = pixel ? 1 : 0;\n        next();\n      }\n    }\n    function next() {\n      do {\n        if (col % 2 ^ col < 6) {\n          if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\n            col--;\n            dir = -dir;\n          } else {\n            col++;\n            row += dir;\n          }\n        } else {\n          col--;\n        }\n        if (col == 6) {\n          col--;\n        }\n        if (col < 0) {\n          return false;\n        }\n      } while (matrix[row][col] & 0xf0);\n      return true;\n    }\n  };\n}();\n\n// {{{1 Calculate penalty\nfunction calculatePenalty(matrix) {\n  var N = matrix.length;\n  var penalty = 0;\n  // Rule 1\n  for (var i = 0; i < N; i++) {\n    var pixel = matrix[i][0] & 1;\n    var len = 1;\n    for (var j = 1; j < N; j++) {\n      var p = matrix[i][j] & 1;\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n      pixel = p;\n      len = 1;\n    }\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  }\n  for (var j = 0; j < N; j++) {\n    var pixel = matrix[0][j] & 1;\n    var len = 1;\n    for (var i = 1; i < N; i++) {\n      var p = matrix[i][j] & 1;\n      if (p == pixel) {\n        len++;\n        continue;\n      }\n      if (len >= 5) {\n        penalty += len - 2;\n      }\n      pixel = p;\n      len = 1;\n    }\n    if (len >= 5) {\n      penalty += len - 2;\n    }\n  }\n\n  // Rule 2\n  for (var i = 0; i < N - 1; i++) {\n    for (var j = 0; j < N - 1; j++) {\n      var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\n      if (s == 0 || s == 4) {\n        penalty += 3;\n      }\n    }\n  }\n\n  // Rule 3\n  function I(k) {\n    return matrix[i][j + k] & 1;\n  }\n  ;\n  function J(k) {\n    return matrix[i + k][j] & 1;\n  }\n  ;\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\n        if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\n          penalty += 40;\n        }\n        if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\n          penalty += 40;\n        }\n      }\n      if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\n        if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\n          penalty += 40;\n        }\n        if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\n          penalty += 40;\n        }\n      }\n    }\n  }\n\n  // Rule 4\n  var numDark = 0;\n  for (var i = 0; i < N; i++) {\n    for (var j = 0; j < N; j++) {\n      if (matrix[i][j] & 1) numDark++;\n    }\n  }\n  penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark / (N * N)));\n  return penalty;\n}\n\n// {{{1 All-in-one function\nfunction getMatrix(data) {\n  var matrix = init(data.version);\n  fillFinders(matrix);\n  fillAlignAndTiming(matrix);\n  fillStub(matrix);\n  var penalty = Infinity;\n  var bestMask = 0;\n  for (var mask = 0; mask < 8; mask++) {\n    fillData(matrix, data, mask);\n    fillReserved(matrix, data.ec_level, mask);\n    var p = calculatePenalty(matrix);\n    if (p < penalty) {\n      penalty = p;\n      bestMask = mask;\n    }\n  }\n  fillData(matrix, data, bestMask);\n  fillReserved(matrix, data.ec_level, bestMask);\n  return matrix.map(function (row) {\n    return row.map(function (cell) {\n      return cell & 1;\n    });\n  });\n}\n\n// {{{1 export functions\nmodule.exports = {\n  getMatrix: getMatrix,\n  init: init,\n  fillFinders: fillFinders,\n  fillAlignAndTiming: fillAlignAndTiming,\n  fillStub: fillStub,\n  fillReserved: fillReserved,\n  fillData: fillData,\n  calculatePenalty: calculatePenalty\n};","map":{"version":3,"names":["init","version","N","matrix","zeros","Buffer","fill","slice","call","i","fillFinders","length","j","max","Math","min","pixel","fillAlignAndTiming","len","delta","round","ceil","res","p","unshift","x","y","r","c","fillStub","fillReserved","FORMATS","Array","VERSIONS","gf15","gf18","formats_mask","format","EC_LEVELS","L","M","Q","H","ec_level","mask","F","k","V","fillData","MASK_FUNCTIONS","floor","data","row","col","dir","mask_fn","blocks","b","put","ec_len","ec","next","byte","calculatePenalty","penalty","s","I","J","numDark","abs","getMatrix","Infinity","bestMask","map","cell","module","exports"],"sources":["F:/Coding Projects/Chat App/client/node_modules/qr-image/lib/matrix.js"],"sourcesContent":["\"use strict\";\n\n// {{{1 Initialize matrix with zeros\nfunction init(version) {\n    var N = version * 4 + 17;\n    var matrix = [];\n    var zeros = new Buffer(N);\n    zeros.fill(0);\n    zeros = [].slice.call(zeros);\n    for (var i = 0; i < N; i++) {\n        matrix[i] = zeros.slice();\n    }\n    return matrix;\n}\n\n// {{{1 Put finders into matrix\nfunction fillFinders(matrix) {\n    var N = matrix.length;\n    for (var i = -3; i <= 3; i++) {\n        for (var j = -3; j <= 3; j++) {\n            var max = Math.max(i, j);\n            var min = Math.min(i, j);\n            var pixel = (max == 2 && min >= -2) || (min == -2 && max <= 2) ? 0x80 : 0x81;\n            matrix[3 + i][3 + j] = pixel;\n            matrix[3 + i][N - 4 + j] = pixel;\n            matrix[N - 4 + i][3 + j] = pixel;\n        }\n    }\n    for (var i = 0; i < 8; i++) {\n        matrix[7][i] = matrix[i][7] =\n        matrix[7][N - i - 1] = matrix[i][N - 8] =\n        matrix[N - 8][i] = matrix[N - 1 - i][7] = 0x80;\n    }\n}\n\n// {{{1 Put align and timinig\nfunction fillAlignAndTiming(matrix) {\n    var N = matrix.length;\n    if (N > 21) {\n        var len = N - 13;\n        var delta = Math.round(len / Math.ceil(len / 28));\n        if (delta % 2) delta++;\n        var res = [];\n        for (var p = len + 6; p > 10; p -= delta) {\n            res.unshift(p);\n        }\n        res.unshift(6);\n        for (var i = 0; i < res.length; i++) {\n            for (var j = 0; j < res.length; j++) {\n                var x = res[i], y = res[j];\n                if (matrix[x][y]) continue;\n                for (var r = -2; r <=2 ; r++) {\n                    for (var c = -2; c <=2 ; c++) {\n                        var max = Math.max(r, c);\n                        var min = Math.min(r, c);\n                        var pixel = (max == 1 && min >= -1) || (min == -1 && max <= 1) ? 0x80 : 0x81;\n                        matrix[x + r][y + c] = pixel;\n                    }\n                }\n            }\n        }\n    }\n    for (var i = 8; i < N - 8; i++) {\n        matrix[6][i] = matrix[i][6] = i % 2 ? 0x80 : 0x81;\n    }\n}\n\n// {{{1 Fill reserved areas with zeroes\nfunction fillStub(matrix) {\n    var N = matrix.length;\n    for (var i = 0; i < 8; i++) {\n        if (i != 6) {\n            matrix[8][i] = matrix[i][8] = 0x80;\n        }\n        matrix[8][N - 1 - i] = 0x80;\n        matrix[N - 1 - i][8] = 0x80;\n    }\n    matrix[8][8] = 0x80;\n    matrix[N - 8][8] = 0x81;\n\n    if (N < 45) return;\n\n    for (var i = N - 11; i < N - 8; i++) {\n        for (var j = 0; j < 6; j++) {\n            matrix[i][j] = matrix[j][i] = 0x80;\n        }\n    }\n}\n\n// {{{1 Fill reserved areas\nvar fillReserved = (function() {\n    var FORMATS = Array(32);\n    var VERSIONS = Array(40);\n\n    var gf15 = 0x0537;\n    var gf18 = 0x1f25;\n    var formats_mask = 0x5412;\n\n    for (var format = 0; format < 32; format++) {\n        var res = format << 10;\n        for (var i = 5; i > 0; i--) {\n            if (res >>> (9 + i)) {\n                res = res ^ (gf15 << (i - 1));\n            }\n        }\n        FORMATS[format] = (res | (format << 10)) ^ formats_mask;\n    }\n\n    for (var version = 7; version <= 40; version++) {\n        var res = version << 12;\n        for (var i = 6; i > 0; i--) {\n            if (res >>> (11 + i)) {\n                res = res ^ (gf18 << (i - 1));\n            }\n        }\n        VERSIONS[version] = (res | (version << 12));\n    }\n\n    var EC_LEVELS = { L: 1, M: 0, Q: 3, H: 2 };\n\n    return function fillReserved(matrix, ec_level, mask) {\n        var N = matrix.length;\n        var format = FORMATS[EC_LEVELS[ec_level] << 3 | mask];\n        function F(k) { return format >> k & 1 ? 0x81 : 0x80 };\n        for (var i = 0; i < 8; i++) {\n            matrix[8][N - 1 - i] = F(i);\n            if (i < 6) matrix[i][8] = F(i);\n        }\n        for (var i = 8; i < 15; i++) {\n            matrix[N - 15 + i][8] = F(i);\n            if (i > 8) matrix[8][14 - i] = F(i);\n        }\n        matrix[7][8] = F(6);\n        matrix[8][8] = F(7);\n        matrix[8][7] = F(8);\n\n        var version = VERSIONS[(N - 17)/4];\n        if (!version) return;\n        function V(k) { return version >> k & 1 ? 0x81 : 0x80 };\n        for (var i = 0; i < 6; i++) {\n            for (var j = 0; j < 3; j++) {\n                matrix[N - 11 + j][i] = matrix[i][N - 11 + j] = V(i * 3 + j);\n            }\n        }\n    }\n})();\n\n// {{{1 Fill data\nvar fillData = (function() {\n    var MASK_FUNCTIONS = [\n        function(i, j) { return (i + j) % 2 == 0 },\n        function(i, j) { return i % 2 == 0 },\n        function(i, j) { return j % 3 == 0 },\n        function(i, j) { return (i + j) % 3 == 0 },\n        function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0 },\n        function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0 },\n        function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0 },\n        function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0 }\n    ];\n\n    return function fillData(matrix, data, mask) {\n        var N = matrix.length;\n        var row, col, dir = -1;\n        row = col = N - 1;\n        var mask_fn = MASK_FUNCTIONS[mask];\n        var len = data.blocks[data.blocks.length - 1].length;\n\n        for (var i = 0; i < len; i++) {\n            for (var b = 0; b < data.blocks.length; b++) {\n                if (data.blocks[b].length <= i) continue;\n                put(data.blocks[b][i]);\n            }\n        }\n\n        len = data.ec_len;\n        for (var i = 0; i < len; i++) {\n            for (var b = 0; b < data.ec.length; b++) {\n                put(data.ec[b][i]);\n            }\n        }\n\n        if (col > -1) {\n            do {\n                matrix[row][col] = mask_fn(row, col) ? 1 : 0;\n            } while (next());\n        }\n\n        function put(byte) {\n            for (var mask = 0x80; mask; mask = mask >> 1) {\n                var pixel = !!(mask & byte);\n                if (mask_fn(row, col)) pixel = !pixel;\n                matrix[row][col] = pixel ? 1 : 0;\n                next();\n            }\n        }\n\n        function next() {\n            do {\n                if ((col % 2) ^ (col < 6)) {\n                    if (dir < 0 && row == 0 || dir > 0 && row == N - 1) {\n                        col--;\n                        dir = -dir;\n                    } else {\n                        col++;\n                        row += dir;\n                    }\n                } else {\n                    col--;\n                }\n                if (col == 6) {\n                    col--;\n                }\n                if (col < 0) {\n                    return false;\n                }\n            } while (matrix[row][col] & 0xf0);\n            return true;\n        }\n    }\n})();\n\n// {{{1 Calculate penalty\nfunction calculatePenalty(matrix) {\n    var N = matrix.length;\n    var penalty = 0;\n    // Rule 1\n    for (var i = 0; i < N; i++) {\n        var pixel = matrix[i][0] & 1;\n        var len = 1;\n        for (var j = 1; j < N; j++) {\n            var p = matrix[i][j] & 1;\n            if (p == pixel) {\n                len++;\n                continue;\n            }\n            if (len >= 5) {\n                penalty += len - 2;\n            }\n            pixel = p;\n            len = 1;\n        }\n        if (len >= 5) {\n            penalty += len - 2;\n        }\n    }\n    for (var j = 0; j < N; j++) {\n        var pixel = matrix[0][j] & 1;\n        var len = 1;\n        for (var i = 1; i < N; i++) {\n            var p = matrix[i][j] & 1;\n            if (p == pixel) {\n                len++;\n                continue;\n            }\n            if (len >= 5) {\n                penalty += len - 2;\n            }\n            pixel = p;\n            len = 1;\n        }\n        if (len >= 5) {\n            penalty += len - 2;\n        }\n    }\n\n    // Rule 2\n    for (var i = 0; i < N - 1; i++) {\n        for (var j = 0; j < N - 1; j++) {\n            var s = matrix[i][j] + matrix[i][j + 1] + matrix[i + 1][j] + matrix[i + 1][j + 1] & 7;\n            if (s == 0 || s == 4) {\n                penalty += 3;\n            }\n        }\n    }\n\n    // Rule 3\n    function I(k) { return matrix[i][j + k] & 1 };\n    function J(k) { return matrix[i + k][j] & 1 };\n    for (var i = 0; i < N; i++) {\n        for (var j = 0; j < N; j++) {\n            if (j < N - 6 && I(0) && !I(1) && I(2) && I(3) && I(4) && !I(5) && I(6)) {\n                if (j >= 4 && !(I(-4) || I(-3) || I(-2) || I(-1))) {\n                    penalty += 40;\n                }\n                if (j < N - 10 && !(I(7) || I(8) || I(9) || I(10))) {\n                    penalty += 40;\n                }\n            }\n\n            if (i < N - 6 && J(0) && !J(1) && J(2) && J(3) && J(4) && !J(5) && J(6)) {\n                if (i >= 4 && !(J(-4) || J(-3) || J(-2) || J(-1))) {\n                    penalty += 40;\n                }\n                if (i < N - 10 && !(J(7) || J(8) || J(9) || J(10))) {\n                    penalty += 40;\n                }\n            }\n        }\n    }\n\n    // Rule 4\n    var numDark = 0;\n    for (var i = 0; i < N; i++) {\n        for (var j = 0; j < N; j++) {\n            if (matrix[i][j] & 1) numDark++;\n        }\n    }\n    penalty += 10 * Math.floor(Math.abs(10 - 20 * numDark/(N * N)));\n\n    return penalty;\n}\n\n// {{{1 All-in-one function\nfunction getMatrix(data) {\n    var matrix = init(data.version);\n    fillFinders(matrix);\n    fillAlignAndTiming(matrix);\n    fillStub(matrix);\n\n    var penalty = Infinity;\n    var bestMask = 0;\n    for (var mask = 0; mask < 8; mask++) {\n        fillData(matrix, data, mask);\n        fillReserved(matrix, data.ec_level, mask);\n        var p = calculatePenalty(matrix);\n        if (p < penalty) {\n            penalty = p;\n            bestMask = mask;\n        }\n    }\n\n    fillData(matrix, data, bestMask);\n    fillReserved(matrix, data.ec_level, bestMask);\n\n    return matrix.map(function(row) {\n        return row.map(function(cell) {\n            return cell & 1;\n        });\n    });\n}\n\n// {{{1 export functions\nmodule.exports = {\n    getMatrix: getMatrix,\n    init: init,\n    fillFinders: fillFinders,\n    fillAlignAndTiming: fillAlignAndTiming,\n    fillStub: fillStub,\n    fillReserved: fillReserved,\n    fillData: fillData,\n    calculatePenalty: calculatePenalty,\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}